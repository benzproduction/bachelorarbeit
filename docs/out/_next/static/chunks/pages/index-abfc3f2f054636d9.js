(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{1464:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return t(1969)}])},9369:function(e,n,t){"use strict";var s=t(5893);t(7294);let i={logo:(0,s.jsx)("span",{children:"Docs Bachelor thesis"}),project:{link:"https://github.com/benzproduction/bachelorarbeit"},docsRepositoryBase:"https://github.com/benzproduction/bachelorarbeit/docs",footer:{text:"Documentation for Bachelor thesis"},useNextSeoProps:()=>({titleTemplate:"%s - BA Docs"})};n.Z=i},1969:function(e,n,t){"use strict";t.r(n);var s=t(5893),i=t(2673),r=t(4090),a=t(9369);t(8594),t(9966);var o=t(1151);t(5675);let l={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)},pageOpts:{filePath:"pages/index.mdx",route:"/",headings:[{depth:1,value:"Introduction",id:"introduction"},{depth:2,value:"Getting Started",id:"getting-started"},{depth:3,value:"Downloading the Used Documents",id:"downloading-the-used-documents"},{depth:3,value:"Docker Startup",id:"docker-startup"},{depth:3,value:"Environment Variables",id:"environment-variables"},{depth:2,value:"Overview of the General Idea",id:"overview-of-the-general-idea"}],timestamp:1686818724e3,pageMap:[{kind:"Meta",data:{index:"Introduction",app:"Application",eval:"System Evaluation"}},{kind:"MdxPage",name:"app",route:"/app"},{kind:"Folder",name:"eval",route:"/eval",children:[{kind:"MdxPage",name:"metrics",route:"/eval/metrics"},{kind:"MdxPage",name:"results",route:"/eval/results"},{kind:"Meta",data:{metrics:"Metrics",results:"Results"}}]},{kind:"MdxPage",name:"eval",route:"/eval"},{kind:"MdxPage",name:"index",route:"/"}],flexsearch:{codeblocks:!0},title:"Introduction"},pageNextRoute:"/",nextraLayout:r.ZP,themeConfig:a.Z};function d(e){let n=Object.assign({h1:"h1",p:"p",h2:"h2",h3:"h3",code:"code",pre:"pre",span:"span",ul:"ul",li:"li",strong:"strong",ol:"ol"},(0,o.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{children:"Introduction"}),"\n",(0,s.jsx)(n.p,{children:"This project, developed as part of my bachelor's thesis, aims at creating an intelligent question-answer system for searching and retrieving information in file data spaces. The repository is split into two main parts: the application and the evaluation of the system. The application itself comes in two versions: one built with Streamlit (Python-based), and another built with Next.js. To test the application locally, it's recommended to use the Streamlit version."}),"\n",(0,s.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,s.jsx)(n.p,{children:"Before you can start using the application, there are a few steps you need to follow:"}),"\n",(0,s.jsx)(n.h3,{id:"downloading-the-used-documents",children:"Downloading the Used Documents"}),"\n",(0,s.jsxs)(n.p,{children:["Documents can be downloaded by running the Python script found in ",(0,s.jsx)(n.code,{children:"data/load.py"}),". This will download the PDFs and store them in the ",(0,s.jsx)(n.code,{children:"data/raw/pdfs"})," directory."]}),"\n",(0,s.jsx)(n.h3,{id:"docker-startup",children:"Docker Startup"}),"\n",(0,s.jsxs)(n.p,{children:["The application requires a running Redis Stack on ",(0,s.jsx)(n.code,{children:"localhost:6379"}),". This can be easily set up by running the following Docker command:"]}),"\n",(0,s.jsx)(n.pre,{"data-language":"bash","data-theme":"default",children:(0,s.jsx)(n.code,{"data-language":"bash","data-theme":"default",children:(0,s.jsxs)(n.span,{className:"line",children:[(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"docker"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"run"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"-d"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"--name"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"redis-stack"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"-p"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"6379"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:":6379"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"-p"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"8001"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:":8001"}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"redis/redis-stack:latest"})]})})}),"\n",(0,s.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,s.jsx)(n.p,{children:"The application requires two environment variables to be set:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"OPENAI_API_KEY"})}),": Your OpenAI API key."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"AZURE_OPENAI_ENDPOINT"})}),": The endpoint for Azure's OpenAI service."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The application was developed using the Azure OpenAI language model Text-Davinci-003. Using the Azure version is not strictly required, but it is recommended as changing to the standard OpenAI API would require modifications to the code in multiple places und may change the evaluation results."}),"\n",(0,s.jsx)(n.h2,{id:"overview-of-the-general-idea",children:"Overview of the General Idea"}),"\n",(0,s.jsx)(n.p,{children:"The goal of this project was to design and implement a system that can effectively search and retrieve information from a data space made up of files. The challenge was to enable users to intuitively find information without having to know where and how it's stored. The project addresses this challenge by leveraging artificial intelligence technologies, specifically language models and vector databases."}),"\n",(0,s.jsx)(n.p,{children:"The developed system works as follows:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Text Segmentation and Vectorization"}),': A collection of PDF documents is divided into individual text segments, known as "chunks". These text chunks are then converted into vectors using an embedding model.']}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Storage in Database"}),": The resulting vectors are stored in a Redis database."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Query Processing"}),": When a search query is made, the query itself is also converted into a vector and sent to the database."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Searching for Similar Text Segments"}),": The database performs a k-nearest neighbors (kNN) search and returns the best matching text chunks."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Generation of Response"}),": The language model then takes the query (question) and the matching text chunks, and creates a summary in the context of the query. This summary is then presented to the user as a concrete answer."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The result is an intelligent question-answer system that allows users to search and retrieve information in an intuitive and user-friendly manner."})]})}n.default=(0,i.j)(l)}},function(e){e.O(0,[774,362,888,179],function(){return e(e.s=1464)}),_N_E=e.O()}]);